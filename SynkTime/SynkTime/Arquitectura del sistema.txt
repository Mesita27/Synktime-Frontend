# SynkTime - System Architecture

## Overview
SynkTime is a comprehensive attendance management system with a hierarchical structure:
- Empresas (Companies) → Negocios (Businesses) → Sedes (Locations) → Trabajadores (Employees)
## Estructura de directorios

```
Synktime/
├── index.php               # Punto de entrada principal/redirección a login
├── login.php               # Página de autenticación
├── dashboard.php           # Panel principal post-autenticación
├── logout.php              # Controlador de cierre de sesión
├── employees.php           # Gestión de empleados
├── attendance.php          # Registro y monitoreo de asistencias
├── schedules.php           # Configuración de horarios
├── reports.php             # Generación de reportes
├── assets/
│   ├── css/
│   │   ├── main.css        # Estilos globales
│   │   ├── login.css       # Estilos específicos para login
│   │   └── ...
│   ├── js/
│   │   ├── auth.js         # Lógica de autenticación
│   │   └── ...
│   └── img/
│       ├── synktime-logo.png
│       └── ...
├── components/
│   ├── header.php          # Componente de cabecera
│   ├── sidebar.php         # Navegación lateral
│   └── ...
├── auth/
│   ├── login-handler.php   # Procesamiento de autenticación
│   ├── session.php         # Gestión de sesión
│   └── ...
└── config/
    ├── database.php        # Configuración de conexión a BD
    └── ...
```

## Descripción de módulos y componentes principales

### 1. **assets/**
Contiene todos los archivos estáticos:
- **css/**: Hojas de estilo globales y específicas por módulo/componentes.
- **js/**: Scripts para layout general y funcionalidades específicas.
- **img/**: Imágenes utilizadas en la interfaz.

### 2. **components/**
Componentes reutilizables en la UI, como:
- **header.php**: Cabecera con logo, título, botón de menú, reloj y menú de usuario (incluye logout).
- **sidebar.php**: Barra lateral de navegación, se adapta a diferentes módulos.
- (Otros componentes como attendance_modals.php y attendance_query.php para las funcionalidades de asistencias.)

### 3. **modules/**
Arquitectura modular para CRUD y vistas principales:
- **empleados/**: Gestión de empleados (listar, crear, editar, eliminar, consultar).
- **asistencias/**: Gestión de asistencias (listar, justificar, consultar).
- **horarios/**: Gestión de horarios (listar, crear, editar, eliminar, asignar).
- **reportes/**: Visualización de reportes por rango, diario, semanal y mensual.

### 4. **Archivos raíz**
- **dashboard.php**: Vista principal/resumen del sistema tras login.
- **employees.php, attendance.php, schedules.php, reports.php**: Páginas principales de secciones, pueden actuar como root para módulos.
- **login.php**: Formulario de inicio de sesión.
- **logout.php**: Destruye la sesión y redirige al login.
- **index.php**: Landing o redirección inicial.

### 5. **Flujo general**
- El usuario accede a `login.php` e ingresa credenciales.
- Al autenticarse, navega entre módulos usando el sidebar (`sidebar.php`).
- El header (`header.php`) muestra el usuario y permite logout.
- Cada módulo utiliza sus propios scripts y estilos, pero comparten estructura y componentes.
- El sidebar y el header son comunes y responsivos, con lógica JS centralizada en `assets/js/layout.js`.

